---
subcategory: "Transfer Family"
layout: "aws"
page_title: "AWS: aws_transfer_connector"
description: |-
  Provides a AWS Transfer AS2 Connector Resource
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_transfer_connector

Provides a AWS Transfer AS2 Connector resource.

## Example Usage

### Basic

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { TransferConnector } from "./.gen/providers/aws/transfer-connector";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new TransferConnector(this, "example", {
      accessRole: test.arn,
      as2Config: {
        compression: "DISABLED",
        encryptionAlgorithm: "AWS128_CBC",
        localProfileId: local.profileId,
        mdnResponse: "NONE",
        mdnSigningAlgorithm: "NONE",
        messageSubject: "For Connector",
        partnerProfileId: partner.profileId,
        signingAlgorithm: "NONE",
      },
      url: "http://www.test.com",
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `accessRole` - (Required) The IAM Role which provides read and write access to the parent directory of the file location mentioned in the StartFileTransfer request.
* `as2Config` - (Required) The parameters to configure for the connector object. Fields documented below.
* `loggingRole` - (Optional) The IAM Role which is required for allowing the connector to turn on CloudWatch logging for Amazon S3 events.
* `url` - (Required) The URL of the partners AS2 endpoint.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

### As2Config Details

* `compression` - (Required) Specifies weather AS2 file is compressed. The valud values are ZLIB and  DISABLED.
* `encryptionAlgorithm` - (Required) The algorithm that is used to encrypt the file. The valid values are AES128_CBC | AES192_CBC | AES256_CBC | NONE.
* `localProfileId` - (Required) The unique identifier for the AS2 local profile.
* `mdnResponse` - (Required) Used for outbound requests to determine if a partner response for transfers is synchronous or asynchronous. The valid values are SYNC and NONE.
* `mdnSigningAlgorithm` - (Optional) The signing algorithm for the Mdn response. The valid values are SHA256 | SHA384 | SHA512 | SHA1 | NONE | DEFAULT.
* `messageSubject` - (Optional) Used as the subject HTTP header attribute in AS2 messages that are being sent with the connector.
* `partnerProfileId` - (Required) The unique identifier for the AS2 partner profile.
* `signingAlgorithm` - (Required) The algorithm that is used to sign AS2 messages sent with the connector. The valid values are SHA256 | SHA384 | SHA512 | SHA1 | NONE .

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - The ARN of the connector.
* `connectorId`  - The unique identifier for the AS2 profile.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Transfer AS2 Connector using the `connectorId`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
  }
}

```

Using `terraform import`, import Transfer AS2 Connector using the `connectorId`. For example:

```console
% terraform import aws_transfer_connector.example c-4221a88afd5f4362a
```

<!-- cache-key: cdktf-0.18.0 input-9dc7f43fb4fff2fff2b6d1b2ececedcc46941ca24a8dc65f35803f6d5f401de5 -->