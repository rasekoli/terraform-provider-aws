---
subcategory: "Transfer Family"
layout: "aws"
page_title: "AWS: aws_transfer_connector"
description: |-
  Provides a AWS Transfer AS2 Connector Resource
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_transfer_connector

Provides a AWS Transfer AS2 Connector resource.

## Example Usage

### Basic

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.transfer_connector import TransferConnector
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        TransferConnector(self, "example",
            access_role=test.arn,
            as2_config=TransferConnectorAs2Config(
                compression="DISABLED",
                encryption_algorithm="AWS128_CBC",
                local_profile_id=local.profile_id,
                mdn_response="NONE",
                mdn_signing_algorithm="NONE",
                message_subject="For Connector",
                partner_profile_id=partner.profile_id,
                signing_algorithm="NONE"
            ),
            url="http://www.test.com"
        )
```

## Argument Reference

This resource supports the following arguments:

* `access_role` - (Required) The IAM Role which provides read and write access to the parent directory of the file location mentioned in the StartFileTransfer request.
* `as2_config` - (Required) The parameters to configure for the connector object. Fields documented below.
* `logging_role` - (Optional) The IAM Role which is required for allowing the connector to turn on CloudWatch logging for Amazon S3 events.
* `url` - (Required) The URL of the partners AS2 endpoint.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

### As2Config Details

* `compression` - (Required) Specifies weather AS2 file is compressed. The valud values are ZLIB and  DISABLED.
* `encryption_algorithm` - (Required) The algorithm that is used to encrypt the file. The valid values are AES128_CBC | AES192_CBC | AES256_CBC | NONE.
* `local_profile_id` - (Required) The unique identifier for the AS2 local profile.
* `mdn_response` - (Required) Used for outbound requests to determine if a partner response for transfers is synchronous or asynchronous. The valid values are SYNC and NONE.
* `mdn_signing_algorithm` - (Optional) The signing algorithm for the Mdn response. The valid values are SHA256 | SHA384 | SHA512 | SHA1 | NONE | DEFAULT.
* `message_subject` - (Optional) Used as the subject HTTP header attribute in AS2 messages that are being sent with the connector.
* `partner_profile_id` - (Required) The unique identifier for the AS2 partner profile.
* `signing_algorithm` - (Required) The algorithm that is used to sign AS2 messages sent with the connector. The valid values are SHA256 | SHA384 | SHA512 | SHA1 | NONE .

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - The ARN of the connector.
* `connector_id`  - The unique identifier for the AS2 profile.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Transfer AS2 Connector using the `connector_id`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
```

Using `terraform import`, import Transfer AS2 Connector using the `connector_id`. For example:

```console
% terraform import aws_transfer_connector.example c-4221a88afd5f4362a
```

<!-- cache-key: cdktf-0.18.0 input-9dc7f43fb4fff2fff2b6d1b2ececedcc46941ca24a8dc65f35803f6d5f401de5 -->