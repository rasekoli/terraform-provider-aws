---
subcategory: "OpenSearch"
layout: "aws"
page_title: "AWS: aws_opensearch_outbound_connection"
description: |-
  Terraform resource for managing an AWS OpenSearch Outbound Connection.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_opensearch_outbound_connection

Manages an AWS Opensearch Outbound Connection.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsCallerIdentity } from "./.gen/providers/aws/data-aws-caller-identity";
import { DataAwsRegion } from "./.gen/providers/aws/data-aws-region";
import { OpensearchOutboundConnection } from "./.gen/providers/aws/opensearch-outbound-connection";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const current = new DataAwsCallerIdentity(this, "current", {});
    const dataAwsRegionCurrent = new DataAwsRegion(this, "current_1", {});
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAwsRegionCurrent.overrideLogicalId("current");
    new OpensearchOutboundConnection(this, "foo", {
      connectionAlias: "outbound_connection",
      localDomainInfo: {
        domainName: localDomain.domainName,
        ownerId: Token.asString(current.accountId),
        region: Token.asString(dataAwsRegionCurrent.name),
      },
      remoteDomainInfo: {
        domainName: remoteDomain.domainName,
        ownerId: Token.asString(current.accountId),
        region: Token.asString(dataAwsRegionCurrent.name),
      },
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `connectionAlias` - (Required, Forces new resource) Specifies the connection alias that will be used by the customer for this connection.
* `localDomainInfo` - (Required, Forces new resource) Configuration block for the local Opensearch domain.
* `remoteDomainInfo` - (Required, Forces new resource) Configuration block for the remote Opensearch domain.

### local_domain_info

* `ownerId` - (Required, Forces new resource) The Account ID of the owner of the local domain.
* `domainName` - (Required, Forces new resource) The name of the local domain.
* `region` - (Required, Forces new resource) The region of the local domain.

### remote_domain_info

* `ownerId` - (Required, Forces new resource) The Account ID of the owner of the remote domain.
* `domainName` - (Required, Forces new resource) The name of the remote domain.
* `region` - (Required, Forces new resource) The region of the remote domain.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The Id of the connection.
* `connectionStatus` - Status of the connection request.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import AWS Opensearch Outbound Connections using the Outbound Connection ID. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
  }
}

```

Using `terraform import`, import AWS Opensearch Outbound Connections using the Outbound Connection ID. For example:

```console
% terraform import aws_opensearch_outbound_connection.foo connection-id
```

<!-- cache-key: cdktf-0.18.0 input-66b0f25681a70ab643eecea4d1d5a099816aa0b122b56feaa993ca3532c8544d -->