---
subcategory: "OpenSearch"
layout: "aws"
page_title: "AWS: aws_opensearch_outbound_connection"
description: |-
  Terraform resource for managing an AWS OpenSearch Outbound Connection.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_opensearch_outbound_connection

Manages an AWS Opensearch Outbound Connection.

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.data_aws_caller_identity import DataAwsCallerIdentity
from imports.aws.data_aws_region import DataAwsRegion
from imports.aws.opensearch_outbound_connection import OpensearchOutboundConnection
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        current = DataAwsCallerIdentity(self, "current")
        data_aws_region_current = DataAwsRegion(self, "current_1")
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_aws_region_current.override_logical_id("current")
        OpensearchOutboundConnection(self, "foo",
            connection_alias="outbound_connection",
            local_domain_info=OpensearchOutboundConnectionLocalDomainInfo(
                domain_name=local_domain.domain_name,
                owner_id=Token.as_string(current.account_id),
                region=Token.as_string(data_aws_region_current.name)
            ),
            remote_domain_info=OpensearchOutboundConnectionRemoteDomainInfo(
                domain_name=remote_domain.domain_name,
                owner_id=Token.as_string(current.account_id),
                region=Token.as_string(data_aws_region_current.name)
            )
        )
```

## Argument Reference

This resource supports the following arguments:

* `connection_alias` - (Required, Forces new resource) Specifies the connection alias that will be used by the customer for this connection.
* `local_domain_info` - (Required, Forces new resource) Configuration block for the local Opensearch domain.
* `remote_domain_info` - (Required, Forces new resource) Configuration block for the remote Opensearch domain.

### local_domain_info

* `owner_id` - (Required, Forces new resource) The Account ID of the owner of the local domain.
* `domain_name` - (Required, Forces new resource) The name of the local domain.
* `region` - (Required, Forces new resource) The region of the local domain.

### remote_domain_info

* `owner_id` - (Required, Forces new resource) The Account ID of the owner of the remote domain.
* `domain_name` - (Required, Forces new resource) The name of the remote domain.
* `region` - (Required, Forces new resource) The region of the remote domain.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The Id of the connection.
* `connection_status` - Status of the connection request.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import AWS Opensearch Outbound Connections using the Outbound Connection ID. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
```

Using `terraform import`, import AWS Opensearch Outbound Connections using the Outbound Connection ID. For example:

```console
% terraform import aws_opensearch_outbound_connection.foo connection-id
```

<!-- cache-key: cdktf-0.18.0 input-66b0f25681a70ab643eecea4d1d5a099816aa0b122b56feaa993ca3532c8544d -->