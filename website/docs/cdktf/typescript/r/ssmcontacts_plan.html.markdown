---
subcategory: "SSM Contacts"
layout: "aws"
page_title: "AWS: aws_ssmcontacts_plan"
description: |-
  Terraform resource for managing an AWS SSM Contact Plan.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ssmcontacts_plan

Terraform resource for managing an AWS SSM Contact Plan.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SsmcontactsPlan } from "./.gen/providers/aws/ssmcontacts-plan";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new SsmcontactsPlan(this, "example", {
      contactId:
        "arn:aws:ssm-contacts:us-west-2:123456789012:contact/contactalias",
      stage: [
        {
          durationInMinutes: 1,
        },
      ],
    });
  }
}

```

### Usage with SSM Contact

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SsmcontactsContact } from "./.gen/providers/aws/ssmcontacts-contact";
import { SsmcontactsPlan } from "./.gen/providers/aws/ssmcontacts-plan";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const contact = new SsmcontactsContact(this, "contact", {
      alias: "alias",
      type: "PERSONAL",
    });
    new SsmcontactsPlan(this, "plan", {
      contactId: contact.arn,
      stage: [
        {
          durationInMinutes: 1,
        },
      ],
    });
  }
}

```

### Usage With All Fields

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SsmcontactsContact } from "./.gen/providers/aws/ssmcontacts-contact";
import { SsmcontactsPlan } from "./.gen/providers/aws/ssmcontacts-plan";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const contactOne = new SsmcontactsContact(this, "contact_one", {
      alias: "alias",
      type: "PERSONAL",
    });
    const contactTwo = new SsmcontactsContact(this, "contact_two", {
      alias: "alias",
      type: "PERSONAL",
    });
    const escalationPlan = new SsmcontactsContact(this, "escalation_plan", {
      alias: "escalation-plan-alias",
      type: "ESCALATION",
    });
    new SsmcontactsPlan(this, "test", {
      contactId: escalationPlan.arn,
      stage: [
        {
          durationInMinutes: 0,
          target: [
            {
              contactTargetInfo: {
                contactId: contactOne.arn,
                isEssential: false,
              },
            },
            {
              contactTargetInfo: {
                contactId: contactTwo.arn,
                isEssential: true,
              },
            },
          ],
        },
      ],
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `contactId` - (Required) The Amazon Resource Name (ARN) of the contact or escalation plan.
* `stage` - (Required) List of stages. A contact has an engagement plan with stages that contact specified contact channels. An escalation plan uses stages that contact specified contacts.

## Attribute Reference

This resource exports no additional attributes.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import SSM Contact Plan using the Contact ARN. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
  }
}

```

Using `terraform import`, import SSM Contact Plan using the Contact ARN. For example:

```console
% terraform import aws_ssmcontacts_plan.example {ARNValue}
```

<!-- cache-key: cdktf-0.18.0 input-b4cf46452def53401430a7de3b756aa75f94fe3fbe79d237dcc4e08ea43938c8 -->